name: Test

on:
  pull_request:
    paths-ignore:
      - 'doc/**'
      - 'README.*'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          ## TODO cannot test on windows for now, fortran compiler is not found
          - os: windows-latest
            python-version: "3.10"

          - os: macos-latest
            python-version: "3.7"

          # # version number must be string, otherwise 3.10 becomes 3.1
          - os: ubuntu-latest
            python-version: "3.9"
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    # - uses: actions/checkout@v3
    #   with:
    #     submodules: true
    #     lfs: true
    # - name: Create LFS file list
    #   run: |
    #     git lfs ls-files --long --include  "${{ inputs.include }}" --exclude  "${{ inputs.exclude }}" | cut -d ' ' -f1 | sort > .lfs-assets-id
    #   shell: bash
    # - name: Restore LFS cache
    #   uses: actions/cache@v3
    #   id: lfs-cache
    #   with:
    #     path: .git/lfs
    #     key: lfs-${{ hashFiles('.lfs-assets-id') }}-v1
    # - name: Git LFS Pull
    #   run: git lfs pull
    #   shell: bash

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: awvwgk/setup-fortran@main
      id: setup-fortran
      with:
        compiler: gcc
        version: 11
    - run: python -m pip install --upgrade pip
    - run: python -m pip install --prefer-binary -v .[test]
      if: ${{ matrix.os != 'windows-latest' }}


    - if: ${{ matrix.os == 'windows-latest' }}
      run: |
        curl -LJO https://github.com/dlfcn-win32/dlfcn-win32/archive/refs/heads/master.zip
        unzip dlfcn-win32-master.zip
        python -m pip install cmake
        cmake -S ./dlfcn-win32-master -B ./build_dlfcn -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release 
        cmake --build ./build_dlfcn
        cmake --install ./build_dlfcn 

    - run: python -m pip install --prefer-binary -v .[test]
      if: ${{ matrix.os == 'windows-latest' }}
      env:
        CMAKE_GENERATOR: "MinGW Makefiles"
        FC: ${{ steps.setup-fortran.outputs.fc }}

    - run: python -m pytest -vv
      env:
        no_proxy: '*'
